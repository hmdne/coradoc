#!/usr/bin/env ruby
# Usage: reverse_adoc [FILE]...
# Usage: cat FILE | reverse_adoc
require "rubygems"
require "bundler/setup"

require "coradoc/reverse_adoc"
require "optparse"
require "fileutils"

OptionParser.new do |opts|
  opts.banner = "Usage: reverse_adoc [options] <file>"
  opts.on("-m", "--mathml2asciimath", "Convert MathML to AsciiMath") do |_v|
    Coradoc::ReverseAdoc.config.mathml2asciimath = true
  end

  opts.on("-oFILENAME", "--output=FILENAME", "Output file to write to") do |v|
    Coradoc::ReverseAdoc.config.destination = File.expand_path(v)
    # puts "output goes to #{Coradoc::ReverseAdoc.config.destination}"
  end

  opts.on("-e", "--external-images", "Export images if data URI") do |_v|
    Coradoc::ReverseAdoc.config.external_images = true
  end

  opts.on("-u", "--unknown_tags [pass_through, drop, bypass, raise]",
          "Unknown tag handling (default: pass_through)") do |v|
    Coradoc::ReverseAdoc.config.unknown_tags = v
  end

  opts.on("-r", "--require RUBYMODULE", "Require additional Ruby file") do |v|
    require v
  end

  opts.on("--track-time", "Track time spent on each step") do
    Coradoc::ReverseAdoc.config.track_time = true
  end

  opts.on("--split-sections LEVEL", "Split sections up to LEVEL") do |i|
    Coradoc::ReverseAdoc.config.split_sections = i.to_i
  end

  opts.on("-v", "--version", "Version information") do |_v|
    puts "reverse_adoc: v#{Coradoc::ReverseAdoc::VERSION}"
    exit
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

if filename = ARGV.pop
  input_content = IO.read(filename)
  Coradoc::ReverseAdoc.config.sourcedir = File.dirname(File.expand_path(filename))
else
  if Coradoc::ReverseAdoc.config.external_images
    raise "The -e | --external-images feature cannot be used with STDIN input. Exiting."
  end

  input_content = ARGF.read
end

if Coradoc::ReverseAdoc.config.external_images && Coradoc::ReverseAdoc.config.destination.nil?
  raise "The -e | --external-images feature must be used with -o | --output. Exiting."
end

if Coradoc::ReverseAdoc.config.split_sections && Coradoc::ReverseAdoc.config.destination.nil?
  raise "The --split_sections feature must be used with -o | --output. Exiting."
end

# Read from STDIN
adoc_content = Coradoc::ReverseAdoc.convert(input_content)

# Print to STDOUT
unless Coradoc::ReverseAdoc.config.destination
  puts adoc_content
  exit
end

# Write output to Coradoc::ReverseAdoc.config.destination
adoc_content = {nil => adoc_content} unless adoc_content.is_a? Hash

adoc_content.each do |file, content|
  destination = Coradoc::ReverseAdoc.config.destination
  destdir = File.dirname(destination)
  filename = file ? "#{destdir}/#{file}" : destination
  FileUtils.mkdir_p(File.dirname(filename))
  File.write(filename, content)
end
